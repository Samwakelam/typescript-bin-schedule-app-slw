{"version":3,"sources":["my-bin/my-bin.style.tsx","my-bin/my-bin.component.tsx","titles/titles.style.tsx","titles/titles.component.tsx","footer/footer.style.tsx","footer/footer.component.tsx","app/app.component.tsx","helpers/getWeekNumber.tsx","hooks/useBinColour.tsx","index.tsx"],"names":["BinImage","styled","img","StyledMain","main","props","mainColour","MyBin","week","binColour","className","src","process","alt","StyledHeader","header","headerColour","WeekParagraph","p","textColour","TitleH1","h1","StyledSpan","span","Titles","console","log","StyledFooter","footer","footerColour","Footer","App","weekNumber","date","todayDate","Date","firstJan","getFullYear","numDays","Math","floor","ceil","getDay","getWeekNumber","useState","setBinColour","useEffect","isEvenWeek","Number","isInteger","useBinColour","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEaA,EAAWC,IAAOC,IAAV,4CAIRC,EAAaF,IAAOG,KAAV,0IAOD,SAACC,GAAD,OAAWA,EAAMC,YAAc,mB,OCPxCC,EAAQ,SAAC,GAGqB,IAFzCC,EAEwC,EAFxCA,KACAC,EACwC,EADxCA,UAEA,OAAKD,GAASC,EAGZ,cAACN,EAAD,CACEG,WAA0B,UAAdG,EAAwB,aAAe,gBADrD,SAGE,cAACT,EAAD,CACEU,UAAU,MACVC,IAAG,UAAKC,mCAAL,mBACa,UAAdH,EAAwB,QAAU,QADjC,YAGHI,IAAI,gBAXsB,MCRrBC,EAAeb,IAAOc,OAAV,sGAGH,SAACV,GAAD,OAAWA,EAAMW,cAAgB,uBAI1CC,EAAgBhB,IAAOiB,EAAV,2CACf,SAACb,GAAD,OAAWA,EAAMc,YAAc,sBAG7BC,EAAUnB,IAAOoB,GAAV,2CACT,SAAChB,GAAD,OAAWA,EAAMc,YAAc,sBAG7BG,EAAarB,IAAOsB,KAAV,2CACZ,SAAClB,GAAD,OAAWA,EAAMc,YAAc,sBCR7BK,EAAS,SAAC,GAAyC,IAAvChB,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAE7B,OADAgB,QAAQC,IAAI,gBAAiBZ,GAE3B,eAACA,EAAD,CACEE,aACgB,UAAdP,EAAwB,sBAAwB,qBAFpD,UAKE,eAACQ,EAAD,CACEE,WAA0B,UAAdV,EAAwB,aAAe,mBADrD,mBAGSD,KAET,eAACY,EAAD,CACED,WAA0B,UAAdV,EAAwB,aAAe,mBADrD,uCAG6B,IAC3B,cAACa,EAAD,CACEH,WACgB,UAAdV,EAAwB,kBAAoB,gBAFhD,SAKGA,WC9BEkB,EAAe1B,IAAO2B,OAAV,0EAGH,SAACvB,GAAD,OAAWA,EAAMwB,cAAgB,uBCC1CC,EAAS,SAAC,GAAmC,IAAjCrB,EAAgC,EAAhCA,UAEvB,OADAgB,QAAQC,IAAI,iBAAkBC,GAE5B,cAACA,EAAD,CACEE,aACgB,UAAdpB,EAAwB,sBAAwB,wB,QCCjD,SAASsB,IACd,IAAMC,ECbqB,SAACC,GAC5B,IAAMC,EAAiB,IAAIC,KAAKF,GAC1BG,EAAgB,IAAID,KAAKD,EAAUG,cAAe,EAAG,GACrDC,EAAUC,KAAKC,OAAON,EAAYE,GAAb,OAS3B,OAP2BG,KAAKE,MAAMP,EAAUQ,SAAW,EAAIJ,GAAW,GDQ/CK,CAAc,IAAIR,MACvC1B,EEXoB,SAACD,GAAiB,MAEVoC,mBAAiB,SAFP,mBAErCnC,EAFqC,KAE1BoC,EAF0B,KAgB5C,OAZAC,qBAAU,WACR,IAAMC,EAAaC,OAAOC,UAAUzC,EAAO,GAGzCqC,EADEE,EACW,QAEA,WAEd,CAACvC,IAICA,EACEC,EADW,KFLAyC,CAAalB,GAI/B,OAHAP,QAAQC,IAAI,cAAejB,GAC3BgB,QAAQC,IAAI,eAAgBM,GAG1B,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQF,KAAMwB,EAAYvB,UAAWA,IACrC,cAAC,EAAD,CAAOD,KAAMwB,EAAYvB,UAAWA,IACpC,cAAC,EAAD,CAAQA,UAAWA,OGjBzB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtB,EAAD,MAEFuB,SAASC,eAAe,W","file":"static/js/main.4c0137fe.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const BinImage = styled.img`\n  width: 100%;\n`;\n\nexport const StyledMain = styled.main<{ mainColour: string }>`\n  flex-grow: 1;\n\n  display: flex;\n  align-items: center;\n\n  overflow: hidden;\n  background-color: ${(props) => props.mainColour || \"rebeccapurple\"};\n`;\n","// styles\nimport \"./my-bin.style.css\";\nimport { BinImage, StyledMain } from \"./my-bin.style\";\n// types\nimport { MyBinInterface } from \"../types\";\n\nexport const MyBin = ({\n  week,\n  binColour,\n}: MyBinInterface): JSX.Element | null => {\n  if (!week || !binColour) return null;\n\n  return (\n    <StyledMain\n      mainColour={binColour === \"Green\" ? \"papayawhip\" : \"palevioletred\"}\n    >\n      <BinImage\n        className=\"bin\"\n        src={`${process.env.PUBLIC_URL}/assets/${\n          binColour === \"Green\" ? \"Green\" : \"Black\"\n        }-bin.png`}\n        alt=\"Green Bin\"\n      />\n    </StyledMain>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header<{ headerColour: string }>`\n  padding: 12px;\n\n  background-color: ${(props) => props.headerColour || \"var(--darkestGrey\"};\n  color: var(--lightGrey);\n`;\n\nexport const WeekParagraph = styled.p<{ textColour: string }>`\n  color: ${(props) => props.textColour || \"var(--lightGrey)\"};\n`;\n\nexport const TitleH1 = styled.h1<{ textColour: string }>`\n  color: ${(props) => props.textColour || \"var(--lightGrey)\"};\n`;\n\nexport const StyledSpan = styled.span<{ textColour: string }>`\n  color: ${(props) => props.textColour || \"var(--lightGrey)\"};\n`;\n","// packages\nimport React from \"react\";\nimport { MyBinInterface } from \"../types\";\nimport {\n  StyledHeader,\n  WeekParagraph,\n  TitleH1,\n  StyledSpan,\n} from \"./titles.style\";\n\nexport const Titles = ({ week, binColour }: MyBinInterface) => {\n  console.log(\"styledHeader=\", StyledHeader);\n  return (\n    <StyledHeader\n      headerColour={\n        binColour === \"Green\" ? \"var(--darkestGreen)\" : \"var(--darkestGrey)\"\n      }\n    >\n      <WeekParagraph\n        textColour={binColour === \"Green\" ? \"papayawhip\" : \"var(--lightGrey)\"}\n      >\n        Week: {week}\n      </WeekParagraph>\n      <TitleH1\n        textColour={binColour === \"Green\" ? \"papayawhip\" : \"var(--lightGrey)\"}\n      >\n        This Week's Bin Colour Is:{\" \"}\n        <StyledSpan\n          textColour={\n            binColour === \"Green\" ? \"var(--midGreen)\" : \"palevioletred\"\n          }\n        >\n          {binColour}\n        </StyledSpan>\n      </TitleH1>\n    </StyledHeader>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledFooter = styled.footer<{ footerColour: string }>`\n  padding: 12px;\n\n  background-color: ${(props) => props.footerColour || \"var(--darkestGrey\"};\n`;\n","// packages\nimport React from \"react\";\nimport { MyBinInterface } from \"../types\";\n// styles\nimport { StyledFooter } from \"./footer.style\";\n\nexport const Footer = ({ binColour }: MyBinInterface) => {\n  console.log(\"styledFooter =\", StyledFooter);\n  return (\n    <StyledFooter\n      footerColour={\n        binColour === \"Green\" ? \"var(--darkestGreen)\" : \"var(--darkestGrey)\"\n      }\n    ></StyledFooter>\n  );\n};\n","import React from \"react\";\nimport \"./app.style.css\";\n\n//components\nimport { MyBin } from \"../my-bin/my-bin.component\";\nimport { Titles } from \"../titles/titles.component\";\nimport { Footer } from \"../footer/footer.component\";\n// functions\nimport { getWeekNumber } from \"../helpers/getWeekNumber\";\n// hooks\nimport { useBinColour } from \"../hooks/useBinColour\";\n\nexport function App() {\n  const weekNumber: number = getWeekNumber(new Date());\n  const binColour = useBinColour(weekNumber);\n  console.log(\"binColour =\", binColour);\n  console.log(\"weekNumber =\", weekNumber);\n\n  return (\n    <div className=\"App\">\n      <Titles week={weekNumber} binColour={binColour} />\n      <MyBin week={weekNumber} binColour={binColour} />\n      <Footer binColour={binColour} />\n    </div>\n  );\n}\n","export const getWeekNumber = (date: Date): number => {\n  const todayDate: any = new Date(date);\n  const firstJan: any = new Date(todayDate.getFullYear(), 0, 1);\n  const numDays = Math.floor((todayDate - firstJan) / (24 * 60 * 60 * 1000));\n\n  const weekNumber: number = Math.ceil((todayDate.getDay() + 1 + numDays) / 7);\n\n  // console.log('todayDate =', todayDate);\n  // console.log('firstJan =', firstJan);\n  // console.log('numDays =', numDays);\n  // console.log('weekNumber =', weekNumber);\n\n  return weekNumber;\n};\n","// packages\nimport { useState, useEffect } from \"react\";\n\nexport const useBinColour = (week: number) => {\n  // console.log(\"week =\", week);\n  const [binColour, setBinColour] = useState<string>(\"Black\");\n\n  useEffect(() => {\n    const isEvenWeek = Number.isInteger(week / 2);\n    // console.log(\"isEvenWeek =\", isEvenWeek);\n    if (isEvenWeek) {\n      setBinColour(\"Black\");\n    } else {\n      setBinColour(\"Green\");\n    }\n  }, [week]);\n\n  // console.log(\"binColour =\", binColour);\n\n  if (!week) return null;\n  return binColour;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./app/app.component\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}